group 'ru.innopolis.uni'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
compileJava.options.encoding = 'UTF-8'
//sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
repositories {
    mavenCentral()
    mavenLocal()
}
dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile "org.slf4j:slf4j-api:1.7.21"
    compile "org.slf4j:slf4j-log4j12:1.7.21"
    testCompile "junit:junit:4.11"
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    compile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
//	compile group: 'postgresql', name: 'postgresql', version: '9.4.1208-jdbc42-atlassian-hosted'
    compile group: 'com.h2database', name: 'h2', version: '1.4.193'
    // https://mvnrepository.com/artifact/postgresql/postgresql
//    compile group: 'postgresql', name: 'postgresql', version: '9.4.1208-atlassian-hosted'
    // https://mvnrepository.com/artifact/postgresql/postgresql
    compile group: 'postgresql', name: 'postgresql', version: '9.3-1102.jdbc4'

}
jar.doFirst(){
    version = version + "." + new File("build.number").text;
}


jar.doLast() {
    File file = new File("build.number");
    file.write String.valueOf(Integer.parseInt(file.text) + 1);
}



